unit Base;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  ComObj,
  Data.Win.ADODB, Data.DB, FireDAC.Comp.Client, DataSet.Serialize.Config,
  DataSet.Serialize, System.JSON, ActiveX, ADOInt,
  FireDAC.Phys.IBDef, FireDAC.Phys.IBBase, FireDAC.Phys.IB, Horse;

type
  TDM = class(TDataModule)

    Conn2: TADOConnection;
    procedure DataModuleCreate(Sender: TObject);
    function ListarDados(id: integer): TJSONObject;
    function ListarProduto(id: String): TJSONObject;
//    function InserirDados(id: integer; token: String; nota: integer): TJSONObject;
    function InserirpProduto(cod_produto: String; desc_produto: String; cod_ean13: integer; preco: Double; dt_cad: String; dt_alt: String): TJSONObject;
  private
    { Private declarations }
  public
  end;

var
  DM: TDM;
  RecRespondida: String;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}
{$R *.dfm}

procedure TDM.DataModuleCreate(Sender: TObject);
begin
  TDataSetSerializeConfig.GetInstance.CaseNameDefinition := cndLower;
  TDataSetSerializeConfig.GetInstance.Import.DecimalSeparator := '.';
  Conn2.DefaultDatabase := 'api_backend';
  Conn2.Connected := True;
end;

function TDM.ListarDados(id: integer): TJSONObject;
var
  Qry: TADOQuery;
begin
  try
    Qry := TADOQuery.Create(nil);
    Qry.Connection := Conn2;
    Qry.SQL.Add('Select * from pesquisa where id_rec = :id_rec ');
    Qry.Parameters.ParamByName('id_rec').Value := id;
    Qry.Active := True;

    Result := Qry.ToJSONObject;
    Qry.Close;
  finally
    FreeAndNil(Qry);
  end;

end;

function TDM.ListarProduto(id: String): TJSONObject;
var
  Qry: TADOQuery;
begin
  try
    Qry := TADOQuery.Create(nil);
    Qry.Connection := Conn2;
    Qry.SQL.Add('Select * from Produtos where cod_produto = :cod_produto ');
    Qry.Parameters.ParamByName('cod_produto').Value := id;
    Qry.Active := True;

    Result := Qry.ToJSONObject;
    Qry.Close;
  finally
    FreeAndNil(Qry);
  end;
end;

//function TDM.InserirDados(id: integer; token: String; nota: integer;
//  empresa: String): TJSONObject;
//var
//  Qry: TADOQuery;
//begin
//  try
//    Qry := TADOQuery.Create(nil);
//    Qry.Connection := Conn2;
//
//    Qry.SQL.Add('Select * from pesquisa where id_rec = :id_rec ');
//    Qry.Parameters.ParamByName('id_rec').Value := id;
//    Qry.Open;
//
//    if Qry.RecordCount > 0 then
//    begin
//      RecRespondida := Qry.FieldByName('id_rec').AsInteger;
//      Result := Qry.ToJSONObject;
//      Qry.Close;
//
//    end
//    else
//    begin
//      Qry.SQL.Add('INSERT INTO PESQUISA(id_rec, token, nota, empresa) ');
//      // Qry.SQL.Add('VALUES(:id_rec,:token,:nota,:empresa)');
//      Qry.SQL.Add('VALUES(' + IntToStr(id) + ',' + QuotedStr(token) + ',' +
//        IntToStr(nota) + ',' + QuotedStr(empresa) + ' )');
//
//      // Qry.Parameters.ParamByName('id_rec').Value    := id;
//      // Qry.Parameters.ParamByName('token').Value     := token;
//      // Qry.Parameters.ParamByName('nota').Value      := nota;
//      // Qry.Parameters.ParamByName('empresa').Value   := empresa;
//      Qry.ExecSQL;
//
//      Result := Qry.ToJSONObject;
//      Qry.Close;
//    end;
//  finally
//    FreeAndNil(Qry);
//  end;

//end;

function TDM.InserirpProduto(cod_produto, desc_produto: String;
  cod_ean13: integer; preco: Double; dt_cad, dt_alt: String): TJSONObject;
var
  Qry: TADOQuery;
begin
  try
    Qry := TADOQuery.Create(nil);
    Qry.Connection := Conn2;

    Qry.SQL.Add('Select * from Produtos where cod_produto = :cod_produto ');
    Qry.Parameters.ParamByName('cod_produto').Value := cod_produto;
    Qry.Open;

    if Qry.RecordCount > 0 then
    begin
      RecRespondida := Qry.FieldByName('cod_produto').AsString;
      Result := Qry.ToJSONObject;
      Qry.Close;
    end
    else
    begin
      Qry.SQL.Add('insert into Produtos(cod_produto,desc_produto,cod_ean13,preco,dt_cadastro,dt_alteracao)');
      Qry.SQL.Add('VALUES(' + cod_produto + ',' + QuotedStr(desc_produto) + ',' +
        IntToStr(cod_ean13) + ',' + FloatToStr(preco) + ','+ QuotedStr(dt_cad) + ',' +QuotedStr(dt_alt) + ' )');

      Qry.ExecSQL;

      Result := Qry.ToJSONObject;
      Qry.Close;
    end;
  finally
    FreeAndNil(Qry);
  end;
end;

end.
